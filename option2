function menuPrincipal()
  local opciones = {"üå©Ô∏èReactor", "üê£AutoHibridar", "‚ùå Salir"}
  local eleccion = gg.choice(opciones, nil, "SCRIPT VIPüåü")

  if eleccion == 1 then
    funcionReactor()
  elseif eleccion == 2 then
    funcionAutoHibridar()
  elseif eleccion == 3 or eleccion == nil then
    gg.toast("Cancelado")
    os.exit()
  end
end

function funcionReactor()
  gg.toast("üì• Descargando script de Reactor...")

  local scriptURL = "https://raw.githubusercontent.com/iiSebastxX/SERVER/refs/heads/main/reactor"
  local scriptRes = gg.makeRequest(scriptURL)

  if scriptRes.code ~= 200 then
    gg.alert("‚ùå Error al descargar el script:\nC√≥digo HTTP: " .. scriptRes.code)
  else
    local tempFile = "/sdcard/temp_script_reactor.lua"
    local file = io.open(tempFile, "w")
    file:write(scriptRes.content)
    file:close()

    local status, err = pcall(loadfile(tempFile))
    if not status then
      if tostring(err):find("called os.exit") then
        gg.toast("üëã Script cerrado correctamente")
      else
        gg.alert("‚ùå Error al ejecutar el script:\n" .. tostring(err))
      end
    else
      gg.toast("‚úÖ Script Reactor ejecutado")
    end
  end
end

function funcionAutoHibridar()
  local opcionesAutoHibridar = {"üìú Mutantes en orden de salida", "üß¨ Mutantes Mono_Gen", "‚ùå Volver"}
  local eleccionAutoHibridar = gg.choice(opcionesAutoHibridar, nil, "Selecciona una opci√≥n dentro de AutoHibridar:")

  if eleccionAutoHibridar == 1 then
    gg.toast("üì• Descargando script Mutantes en orden de salida...")

    local scriptURL = "https://raw.githubusercontent.com/iiSebastxX/SERVER/refs/heads/main/527"
    local scriptRes = gg.makeRequest(scriptURL)

    if scriptRes.code ~= 200 then
      gg.alert("‚ùå Error al descargar el script:\nC√≥digo HTTP: " .. scriptRes.code)
    else
      local tempFile = "/sdcard/temp_script_orden.lua"
      local file = io.open(tempFile, "w")
      file:write(scriptRes.content)
      file:close()

      local status, err = pcall(loadfile(tempFile))
      if not status then
        if tostring(err):find("called os.exit") then
          gg.toast("üëã Script cerrado correctamente")
        else
          gg.alert("‚ùå Error al ejecutar el script:\n" .. tostring(err))
        end
      else
        gg.toast("‚úÖ Script Mutantes en orden de salida ejecutado")
      end
    end

  elseif eleccionAutoHibridar == 2 then
    gg.toast("üì• Descargando script Mutantes Mono_Gen...")

    local scriptURL = "https://raw.githubusercontent.com/iiSebastxX/SERVER/refs/heads/main/monogen"
    local scriptRes = gg.makeRequest(scriptURL)

    if scriptRes.code ~= 200 then
      gg.alert("‚ùå Error al descargar el script:\nC√≥digo HTTP: " .. scriptRes.code)
    else
      local tempFile = "/sdcard/temp_script_monogen.lua"
      local file = io.open(tempFile, "w")
      file:write(scriptRes.content)
      file:close()

      local status, err = pcall(loadfile(tempFile))
      if not status then
        if tostring(err):find("called os.exit") then
          gg.toast("üëã Script cerrado correctamente")
        else
          gg.alert("‚ùå Error al ejecutar el script:\n" .. tostring(err))
        end
      else
        gg.toast("‚úÖ Script Mono_Gen ejecutado")
      end
    end

  elseif eleccionAutoHibridar == 3 or eleccionAutoHibridar == nil then
    gg.toast("Volviendo al men√∫ principal...")
  end
end

-- Ejecutar el men√∫
menuPrincipal()
